## tigrc reference: https://jonas.github.io/tig/doc/tigrc.5.html

set refresh-mode = auto
set commit-order = topo
set tab-size = 2
set line-graphics = yes
set status-show-untracked-dirs = yes
set status-show-untracked-files = yes
set main-view = id:yes date:custom author:abbreviated,width=8 commit-title:graph=true,refs=true,overflow=false
set main-view-date-format = "%Y-%m-%d"

## KEY BINDINGS
# User-defined internal command that reloads ~/.tigrc
bind generic ~ !source ~/.tigrc
bind generic R refresh

# NAVIGATION
bind generic g  none
bind generic gg move-first-line
bind generic <C-J> next
bind generic <C-K> previous
bind generic gu parent
bind generic gU back
bind generic <C-R> refresh
bind generic G move-last-line
bind generic h scroll-left
bind generic j move-down
bind generic k move-up
bind generic l scroll-right
bind generic <C-F> move-page-down
bind generic <C-D> move-half-page-down
bind generic <C-B> move-page-up
bind generic <C-U> move-half-page-up

# View switching
bind generic gm	view-main
bind generic gd	view-diff
bind generic gl	view-log
# bind generic gL	view-reflog
bind generic gt	view-tree
bind generic gf	view-blob
bind generic gb	view-blame
bind generic gr	view-refs
bind generic gp	view-pager
bind generic gh	view-help
bind generic gs	view-status
bind generic gc	view-stage
bind generic gz	view-stash
bind generic gg	view-grep
bind generic <Tab> view-next
bind generic ? view-help
bind generic q view-close
bind generic Q quit
bind generic o maximize

# OPTIONS
bind generic o  none
bind generic oo options
bind generic os :toggle sort-order
bind generic of :toggle sort-field
bind generic on :toggle line-number
bind generic od :toggle date
bind generic oa :toggle author
bind generic og :toggle line-graphics
bind generic oF :toggle file-name
bind generic op :toggle ignore-space
bind generic oi :toggle id
bind generic ot :toggle commit-title-overflow
bind generic ox :toggle file-filter
bind generic or :toggle commit-title-refs

## DOC - Bind symbols:
# !	Run the command in the foreground with output shown.
# @	Run the command in the background with no output.
# ?	Prompt the user before executing the command.
# + Run the command synchronously, and echo the first line of output to the status bar.
# <	Exit Tig after executing the command.
# >	Re-open Tig instantly in the last displayed view after executing the command.
# : Commands act similar to commands run via Tigâ€™s prompt

# ACTIONS - GENERIC
# navigate chunks
bind generic { :/^@@
bind generic } :?^@@
bind generic [ :toggle diff-context -1
bind generic ] :toggle diff-context +1

# FETCH / PULL
bind generic S !git sync
bind generic fs !git sync

# PUSH
bind generic p none
bind generic pp !git push --set-upstream
bind generic pf ?git push --set-upstream --force-with-lease

# BRANCHES
bind generic b none
bind generic bb >fzf
# Requires https://www.npmjs.com/package/slugify-cli
bind generic bc >sh -c 'git switch -c $(slugify "%(prompt Enter branch name: )")'

# COPYING
bind generic y none
bind generic yy ?echo "%(text)" | pbcopy
bind generic yc ?echo "%(commit)" | pbcopy
bind generic yb ?echo "%(branch)" | pbcopy
bind generic yf ?echo "%(file)" | pbcopy

# COMMMITS
# - cherry-pick
# - rebase
bind generic r none
bind generic rc >git rebase --continue
bind generic rx >git rebase --abort
bind generic rm ?>sh -c 'git rebase -i $(git merge-base HEAD "%(remote)/HEAD")'
bind generic ro ?>sh -c 'git rebase -i "%(commit)"'

## STATUS ACTIONS
bind generic s none
bind status s status-update
bind stage s status-update

bind generic d none
bind status dd status-revert
bind stage dd status-revert

bind generic m none
bind status m status-merge
bind stage m status-merge

bind generic v none
bind status v :toggle status

bind generic x none
bind status xx ?>git clean -fd "%(file)"
bind status xa ?>git clean -fd

bind generic X none
bind status XX ?>git clean -fdx

bind generic c none
bind status cc >git commit
bind status ca >git commit --amend -v

bind generic z none
bind status zz >git stash push --include-untracked "%(prompt Enter stash name: )"
bind status zs >git stash push --include-untracked "%(prompt Enter stash name: )"
bind status zZ >git stash push --keep-index --include-untracked "%(prompt Enter stash name: )"
bind status zl view-stash



bind stash p >git stash pop "%(stash)"
bind stash b >git stash branch "%(prompt Enter branch name: )" %(stash)
bind stash a >git stash apply "%(stash)"
bind stash dd ?>git stash drop "%(stash)"

bind refs bb >git switch "%(branch)"
bind refs br >git switch "%(remote)/%(branch)"


# bind status  u  none
# bind stage   u  none
# bind generic uu status-update
# bind generic ur status-revert
# bind generic um status-merge
# bind generic ul stage-update-line
# bind generic us stage-split-chunk

bind generic t none
bind generic f none
bind generic r none
bind generic S none
bind generic y none
bind generic I none
bind generic i none
bind generic D none
bind generic A none
bind generic D none
bind generic W none
bind generic $ none
bind generic % none
bind generic G none
bind generic F none
